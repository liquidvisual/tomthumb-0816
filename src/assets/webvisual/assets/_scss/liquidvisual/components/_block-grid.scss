/*
    BLOCK-GRID.CSS

    - Last updated: 06.10.16
    - liquidvisual.com
*/
//-----------------------------------------------------------------
// VARIABLES
//-----------------------------------------------------------------

$grid-gutter-width: 30px !default;

//-----------------------------------------------------------------
// BLOCK GRID
//
// https://gist.github.com/Jursdotme/67abe379d4a357233d3c
// Block Grid technique adapted from Foundation 5 for Bootstrap 3.
// https://github.com/zurb/foundation/blob/f755d8704123f86c281ede0b171881e2672f150d/scss/foundation/components/_block-grid.scss
// Original LESS Version by Christopher Mitchell (https://gist.github.com/ChrisTM)
// Converted to SCSS by Rasmus JÃ¼rs (https://github.com/Jursdotme)
//-----------------------------------------------------------------

[class*="block-grid-"] {
  @include clearfix();
  display: block;
  margin: -($grid-gutter-width/2);
  padding: 0;
  list-style: none;
  overflow: hidden; // fixes issue with IE
}

[class*="block-grid-"] > li,
.block-grid-item {
  display: inline;
  margin: 0;
  padding: ($grid-gutter-width/2);
  height: auto;
  float: left;
}

// // IE9 HACK
// .lt-ie10 [class*="block-grid-"] > li {
//   // padding: 0 ($grid-gutter-width/2) $grid-gutter-width ($grid-gutter-width/2);
// }

// MS EDGE HACK
// @supports (-ms-accelerator:true) {
//   [class*="block-grid-"] > li {
//     // padding: 0 ($grid-gutter-width/2) $grid-gutter-width ($grid-gutter-width/2);
//   }
// }

//=========================================
// Single
//=========================================

@mixin block-grid ($per-row) {
  & > li,
  & > .block-grid-item {
    width: (100%/$per-row);
    $nth-equation: (#{$per-row}n) + '+' +1;
    &:nth-of-type(n) { clear: none; }
    &:nth-of-type(#{$nth-equation}) { clear: both; }
  }
}

//=========================================
// Clear Negative Margins
//=========================================

@mixin set-margins($unit) {
  margin-top: $unit; // fixed!
  margin-bottom: $unit;
}

//=========================================
// Multiple
//=========================================

@mixin block-grids($size) {
  .block-grid-#{$size}-1  { @include block-grid(1); @include set-margins(0) }
  .block-grid-#{$size}-2  { @include block-grid(2);  }
  .block-grid-#{$size}-3  { @include block-grid(3);  }
  .block-grid-#{$size}-4  { @include block-grid(4);  }
  .block-grid-#{$size}-5  { @include block-grid(5);  }
  .block-grid-#{$size}-6  { @include block-grid(6);  }
  .block-grid-#{$size}-7  { @include block-grid(7);  }
  .block-grid-#{$size}-8  { @include block-grid(8);  }
  .block-grid-#{$size}-9  { @include block-grid(9);  }
  .block-grid-#{$size}-10 { @include block-grid(10); }
  .block-grid-#{$size}-11 { @include block-grid(11); }
  .block-grid-#{$size}-12 { @include block-grid(12); }
}

@include block-grids(xs);

@media (min-width: #{map-get($grid-breakpoints, sm)}) { @include block-grids(sm) }
@media (min-width: #{map-get($grid-breakpoints, md)}) { @include block-grids(md) }
@media (min-width: #{map-get($grid-breakpoints, lg)}) { @include block-grids(lg) }
@media (min-width: #{map-get($grid-breakpoints, xl)}) { @include block-grids(xl) }

//=========================================
//
//=========================================